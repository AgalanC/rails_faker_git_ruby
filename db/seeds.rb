# This file should ensure the existence of records required to run the application in every environment (production,
# development, test). The code here should be idempotent so that it can be executed at any point in every environment.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
#
# Example:
#
#   ["Action", "Comedy", "Drama", "Horror"].each do |genre_name|
#     MovieGenre.find_or_create_by!(name: genre_name)
#   end



# Loads the "faker" gem/package, which is used to generate fake data for the products.
require 'faker'

# Clearing existing products. This is to avoid duplications.
Product.destroy_all

# The "times" method iterates the block of code 676 times.
676.times do
  # Creating a new product record in the database. The "create" method instantiates a new product object and saves it to the database in a single step.
  Product.create(
    # Sets the "title" attribute of the product to a randomly generated product name using the "Faker::Commerce.product_name" method.
    title: Faker::Commerce.product_name,
    # sets the "description" attribute of the product to a randomly generated paragraph using the "Faker::Lorem.paragraph" method.
    description: Faker::Lorem.paragraph,
    # Sets the "price" attribute of the product to a randomly generated price between 0.0 and 500.0 using the "Faker::Commerce.price" method with the specified range.
    price: Faker::Commerce.price(range: 0.0..500.0),
    # Sets the "stock_quantity" attribute of the product to a randomly generated number between 1 and 500 using the "Faker::Number.between" method.
    stock_quantity: Faker::Number.between(from: 1, to: 500)
  )
end

# Printing a message to the console indicating that 676 products have been created.
puts "Created 676 products with random data that was generated by the faker gem."
